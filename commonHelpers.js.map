{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["'use strict';\n\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst button = document.querySelector('[data-start]');\nconst dataPicker = document.querySelector('#datetime-picker');\n\nlet userSelectedDate;\n\nbutton.disabled = true;\n\nconst onClose = selectedDates => {\n  if (selectedDates[0].getTime() < new Date().getTime()) {\n    iziToast.show({\n      message: 'Please choose a date in the future.',\n      messageColor: 'red',\n      position: 'topCenter',\n    });\n    button.disabled = true;\n  } else {\n    userSelectedDate = selectedDates[0];\n    button.disabled = false;\n  }\n};\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose,\n};\n\nflatpickr(dataPicker, options);\n\nbutton.addEventListener('click', () => {\n  button.disabled = true;\n  dataPicker.disabled = true;\n\n  const timeDifferent = userSelectedDate.getTime() - Date.now();\n  startTimer(timeDifferent);\n});\n\nconst addLeadingZero = value => value.toString().padStart(2, '0');\n\nconst setDisplayData = ({ days, hours, minutes, seconds }) => {\n  const dataDays = document.querySelector('[data-days]');\n  const dataHours = document.querySelector('[data-hours]');\n  const dataMinutes = document.querySelector('[data-minutes]');\n  const dataSeconds = document.querySelector('[data-seconds]');\n\n  dataDays.textContent = addLeadingZero(days);\n  dataHours.textContent = addLeadingZero(hours);\n  dataMinutes.textContent = addLeadingZero(minutes);\n  dataSeconds.textContent = addLeadingZero(seconds);\n};\n\nconst convertMs = ms => {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return setDisplayData({ days, hours, minutes, seconds });\n};\n\nconst startTimer = time => {\n  if (time < 0) {\n    return;\n  }\n\n  convertMs(time);\n\n  setTimeout(() => {\n    startTimer(time - 1000);\n  }, 1000);\n\n  if (time === 0) {\n    dataPicker.disabled = false;\n  }\n};\n"],"names":["button","dataPicker","userSelectedDate","onClose","selectedDates","iziToast","options","flatpickr","timeDifferent","startTimer","addLeadingZero","value","setDisplayData","days","hours","minutes","seconds","dataDays","dataHours","dataMinutes","dataSeconds","convertMs","ms","time"],"mappings":"+IAOA,MAAMA,EAAS,SAAS,cAAc,cAAc,EAC9CC,EAAa,SAAS,cAAc,kBAAkB,EAE5D,IAAIC,EAEJF,EAAO,SAAW,GAElB,MAAMG,EAAUC,GAAiB,CAC3BA,EAAc,CAAC,EAAE,QAAS,EAAG,IAAI,KAAI,EAAG,WAC1CC,EAAS,KAAK,CACZ,QAAS,sCACT,aAAc,MACd,SAAU,WAChB,CAAK,EACDL,EAAO,SAAW,KAElBE,EAAmBE,EAAc,CAAC,EAClCJ,EAAO,SAAW,GAEtB,EAEMM,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAAH,CACF,EAEAI,EAAUN,EAAYK,CAAO,EAE7BN,EAAO,iBAAiB,QAAS,IAAM,CACrCA,EAAO,SAAW,GAClBC,EAAW,SAAW,GAEtB,MAAMO,EAAgBN,EAAiB,QAAS,EAAG,KAAK,IAAG,EAC3DO,EAAWD,CAAa,CAC1B,CAAC,EAED,MAAME,EAAiBC,GAASA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,EAE1DC,EAAiB,CAAC,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,IAAO,CAC5D,MAAMC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3DH,EAAS,YAAcP,EAAeG,CAAI,EAC1CK,EAAU,YAAcR,EAAeI,CAAK,EAC5CK,EAAY,YAAcT,EAAeK,CAAO,EAChDK,EAAY,YAAcV,EAAeM,CAAO,CAClD,EAEMK,EAAYC,GAAM,CAMtB,MAAMT,EAAO,KAAK,MAAMS,EAAK,KAAG,EAC1BR,EAAQ,KAAK,MAAOQ,EAAK,MAAO,IAAI,EACpCP,EAAU,KAAK,MAAQO,EAAK,MAAO,KAAQ,GAAM,EACjDN,EAAU,KAAK,MAASM,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,OAAOV,EAAe,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAAE,CACzD,EAEMP,EAAac,GAAQ,CACrBA,EAAO,IAIXF,EAAUE,CAAI,EAEd,WAAW,IAAM,CACfd,EAAWc,EAAO,GAAI,CACvB,EAAE,GAAI,EAEHA,IAAS,IACXtB,EAAW,SAAW,IAE1B"}